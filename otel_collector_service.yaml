---
# Source: opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: default
  labels:
    helm.sh/chart: opentelemetry-collector-0.127.1
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/instance: opentelemetry-collector
    app.kubernetes.io/version: "0.128.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: standalone-collector
---
# Source: opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: default
  labels:
    helm.sh/chart: opentelemetry-collector-0.127.1
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/instance: opentelemetry-collector
    app.kubernetes.io/version: "0.128.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: standalone-collector
    component: standalone-collector
spec:
  type: ClusterIP
  ports:
    
    - name: metrics
      port: 9201
      targetPort: 9201
      protocol: TCP
    - name: otlp
      port: 4317
      targetPort: 4317
      protocol: TCP
      appProtocol: grpc
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
  selector:
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/instance: opentelemetry-collector
    component: standalone-collector
  internalTrafficPolicy: Cluster
---
# Source: opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: default
  labels:
    helm.sh/chart: opentelemetry-collector-0.127.1
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/instance: opentelemetry-collector
    app.kubernetes.io/version: "0.128.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: standalone-collector
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-collector
      app.kubernetes.io/instance: opentelemetry-collector
      component: standalone-collector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        
      labels:
        app.kubernetes.io/name: otel-collector
        app.kubernetes.io/instance: opentelemetry-collector
        component: standalone-collector
        
    spec:
      
      serviceAccountName: otel-collector
      automountServiceAccountToken: true
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          args:
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "otel/opentelemetry-collector:latest"
          imagePullPolicy: IfNotPresent
          ports:
            
            - name: metrics
              containerPort: 9201
              protocol: TCP
            - name: otlp
              containerPort: 4317
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
        - command:
          - sh
          - -c
          - |
            until curl -sf http://localhost:13133; do sleep 2; done
            tail -f /dev/null
          image: curlimages/curl:latest
          name: otel-collector-healthcheck
          readinessProbe:
            httpGet:
              path: /
              port: 13133
            initialDelaySeconds: 5
            periodSeconds: 5
      initContainers:
        - command:
          - sh
          - -c
          - |
            set -e
            for url in \
              http://tempo:3200/ready \
              http://prometheus:9090/-/ready \
              http://loki:3100/ready
            do
              echo "Waiting for $url ..."
              until curl -sf "$url" >/dev/null; do
                sleep 5
              done
            done
            echo "All backâ€‘ends are ready."
          image: curlimages/curl:8.8.0
          name: wait-for-deps
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: otel-collector-configmap
            items:
              - key: relay
                path: relay.yaml
      hostNetwork: false
